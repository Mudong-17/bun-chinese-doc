import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.33544f09.js";const p="/261513160-e6a976a8-80cc-4394-8925-539025cc025d.png",o="/261513717-3b69c7e9-25ff-4f9d-acc4-caa736862935.png",l="/261513463-8b565e58-5445-4061-9bc4-f41090dfe769.png",g=JSON.parse('{"title":"Debugger","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"runtime/debugger.md","filePath":"runtime/debugger.md"}'),t={name:"runtime/debugger.md"},c=e(`<h1 id="debugger" tabindex="-1">Debugger <a class="header-anchor" href="#debugger" aria-label="Permalink to &quot;Debugger&quot;">​</a></h1><p>Bun 支持<a href="https://github.com/oven-sh/bun/blob/main/packages/bun-vscode/types/jsc.d.ts" target="_blank" rel="noreferrer">WebKit Inspector Protocol</a>，因此您可以使用交互式调试器来调试您的代码。为了演示，考虑以下简单的 Web 服务器示例。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#server.ts</span></span>
<span class="line"><span style="color:#E1E4E8;">Bun.</span><span style="color:#B392F0;">serve</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">fetch</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">req</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(req.url);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Response</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Hello, world!&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#server.ts</span></span>
<span class="line"><span style="color:#24292E;">Bun.</span><span style="color:#6F42C1;">serve</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">fetch</span><span style="color:#24292E;">(</span><span style="color:#E36209;">req</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(req.url);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Response</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Hello, world!&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="inspect" tabindex="-1"><code>--inspect</code> <a class="header-anchor" href="#inspect" aria-label="Permalink to &quot;\`--inspect\`&quot;">​</a></h3><p>要在使用 Bun 运行代码时启用调试，请使用<code>--inspect</code>标志。这会自动在可用端口上启动 WebSocket 服务器，用于检查运行中的 Bun 进程。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--inspect</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">server.ts</span></span>
<span class="line"><span style="color:#B392F0;">------------------</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Inspector</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">------------------</span></span>
<span class="line"><span style="color:#B392F0;">Listening</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">at:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">ws://localhost:6499/0tqxs9exrgrm</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">Inspect</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">browser:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">https://debug.bun.sh/#localhost:6499/0tqxs9exrgrm</span></span>
<span class="line"><span style="color:#B392F0;">------------------</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Inspector</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">------------------</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--inspect</span><span style="color:#24292E;"> </span><span style="color:#032F62;">server.ts</span></span>
<span class="line"><span style="color:#6F42C1;">------------------</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Inspector</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">------------------</span></span>
<span class="line"><span style="color:#6F42C1;">Listening</span><span style="color:#24292E;"> </span><span style="color:#032F62;">at:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">ws://localhost:6499/0tqxs9exrgrm</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">Inspect</span><span style="color:#24292E;"> </span><span style="color:#032F62;">in</span><span style="color:#24292E;"> </span><span style="color:#032F62;">browser:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">https://debug.bun.sh/#localhost:6499/0tqxs9exrgrm</span></span>
<span class="line"><span style="color:#6F42C1;">------------------</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Inspector</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">------------------</span></span></code></pre></div><h3 id="inspect-brk" tabindex="-1"><code>--inspect-brk</code> <a class="header-anchor" href="#inspect-brk" aria-label="Permalink to &quot;\`--inspect-brk\`&quot;">​</a></h3><p><code>--inspect-brk</code>标志的行为与<code>--inspect</code>相同，但它会在执行的脚本的第一行自动注入断点。这对于快速运行并立即退出的脚本进行调试非常有用。</p><h3 id="inspect-wait" tabindex="-1"><code>--inspect-wait</code> <a class="header-anchor" href="#inspect-wait" aria-label="Permalink to &quot;\`--inspect-wait\`&quot;">​</a></h3><p><code>--inspect-wait</code>标志的行为与<code>--inspect</code>相同，但在附加调试器到运行中的进程之前，代码不会执行。</p><h3 id="设置调试器的端口或-url" tabindex="-1">设置调试器的端口或 URL <a class="header-anchor" href="#设置调试器的端口或-url" aria-label="Permalink to &quot;设置调试器的端口或 URL&quot;">​</a></h3><p>无论使用哪个标志，您都可以选择指定端口号、URL 前缀或两者。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--inspect=4000</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">server.ts</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--inspect=localhost:4000</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">server.ts</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--inspect=localhost:4000/prefix</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">server.ts</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--inspect=4000</span><span style="color:#24292E;"> </span><span style="color:#032F62;">server.ts</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--inspect=localhost:4000</span><span style="color:#24292E;"> </span><span style="color:#032F62;">server.ts</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--inspect=localhost:4000/prefix</span><span style="color:#24292E;"> </span><span style="color:#032F62;">server.ts</span></span></code></pre></div><h2 id="调试器" tabindex="-1">调试器 <a class="header-anchor" href="#调试器" aria-label="Permalink to &quot;调试器&quot;">​</a></h2><p>各种调试工具可以连接到此服务器，以提供交互式调试体验。</p><h3 id="debug-bun-sh" tabindex="-1"><code>debug.bun.sh</code> <a class="header-anchor" href="#debug-bun-sh" aria-label="Permalink to &quot;\`debug.bun.sh\`&quot;">​</a></h3><p>Bun 在<a href="https://debug.bun.sh" target="_blank" rel="noreferrer">debug.bun.sh</a>上托管了一个基于 Web 的调试器。这是对 Safari 用户熟悉的 WebKit 的<a href="https://webkit.org/web-inspector/web-inspector-interface/" target="_blank" rel="noreferrer">Web Inspector Interface</a>的修改版本。</p><p>在浏览器中打开提供的<code>debug.bun.sh</code> URL 以开始调试会话。从这个界面，您可以查看正在运行的文件的源代码，查看和设置断点，并使用内置控制台执行代码。</p><p><img src="`+p+'" alt="Bun调试器的截图，控制台选项卡"></p><p>让我们设置一个断点。转到&quot;Sources&quot;选项卡；您应该看到之前的代码。单击行号<code>3</code>，以在我们的<code>console.log(req.url)</code>语句上设置断点。</p><p><img src="'+o+'" alt="Bun调试器的截图"></p><p>然后在您的 Web 浏览器中访问<code>http://localhost:3000</code>。这将发送一个 HTTP 请求到我们的<code>localhost</code> Web 服务器。似乎页面不加载。为什么？因为程序已经在我们之前设置的断点处暂停执行。</p><p>请注意界面如何改变。</p><p><img src="'+l+'" alt="Bun调试器的截图"></p><p>在这一点上，我们可以执行许多操作来检查当前的执行环境。我们可以在底部的控制台中运行任意代码，具有对我们断点处的作用域中的变量的完全访问权限。</p><image src="https://github.com/oven-sh/bun/assets/3084745/f4312b76-48ba-4a7d-b3b6-6205968ac681"></image><p>在&quot;Sources&quot;窗格的右侧，我们可以看到当前作用域中的所有本地变量，并深入查看它们的属性和方法。在这里，我们正在检查<code>req</code>变量。</p><image src="https://github.com/oven-sh/bun/assets/3084745/63d7f843-5180-489c-aa94-87c486e68646"></image><p>在&quot;Sources&quot;窗格的左上角，我们可以控制程序的执行。</p><image src="https://github.com/oven-sh/bun/assets/3084745/41b76deb-7371-4461-9d5d-81b5a6d2f7a4"></image><p>这是一个速查表，解释了控制流按钮的功能。</p><ul><li><em>继续脚本执行</em> — 继续运行程序，直到下一个断点或异常。</li><li><em>跳过</em> — 程序将继续到下一行。</li><li><em>跳入</em> — 如果当前语句包含函数调用，调试器将&quot;跳入&quot;所调用的函数。</li><li><em>跳出</em> — 如果当前语句是函数调用，调试器将完成执行调用，然后&quot;跳出&quot;函数，返回到调用它的位置。</li></ul><image src="https://github-production-user-asset-6210df.s3.amazonaws.com/3084745/261510346-6a94441c-75d3-413a-99a7-efa62365f83d.png"></image>',33),r=[c];function i(E,y,d,u,h,b){return a(),n("div",null,r)}const m=s(t,[["render",i]]);export{g as __pageData,m as default};
