import{_ as s,o as a,c as t,Q as e}from"./chunks/framework.33544f09.js";const u=JSON.parse('{"title":"Watch mode","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"test/hot.md","filePath":"test/hot.md"}'),o={name:"test/hot.md"},n=e('<h1 id="watch-mode" tabindex="-1">Watch mode <a class="header-anchor" href="#watch-mode" aria-label="Permalink to &quot;Watch mode&quot;">​</a></h1><p>要在文件更改时自动重新运行测试，可以使用<code>--watch</code>标志：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">test</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--watch</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">test</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--watch</span></span></code></pre></div><p>Bun 会监视测试文件中导入的任何文件的更改，并在检测到更改时重新运行测试。</p><p>这个功能非常快速</p>',5),p=[n];function c(l,r,d,h,i,_){return a(),t("div",null,p)}const y=s(o,[["render",c]]);export{u as __pageData,y as default};
