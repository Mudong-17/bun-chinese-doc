import{_ as s,o as n,c as a,Q as p}from"./chunks/framework.33544f09.js";const u=JSON.parse('{"title":"快速开始","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"quickstart.md","filePath":"quickstart.md"}'),l={name:"quickstart.md"},o=p(`<h1 id="快速开始" tabindex="-1">快速开始 <a class="header-anchor" href="#快速开始" aria-label="Permalink to &quot;快速开始&quot;">​</a></h1><p>让我们使用内置的 <code>Bun.serve</code> API 编写一个简单的 HTTP 服务器。首先，创建一个新的目录。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">mkdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">quickstart</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">quickstart</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mkdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">quickstart</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">quickstart</span></span></code></pre></div><p>运行 <code>bun init</code> 以创建一个新的项目。这是一个交互式工具；在本教程中，只需按 <code>enter</code> 键接受每个提示的默认答案。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">init</span></span>
<span class="line"><span style="color:#B392F0;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">init</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">helps</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">you</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">get</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">started</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">with</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">a</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">minimal</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">project</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">and</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tries</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">to</span></span>
<span class="line"><span style="color:#B392F0;">guess</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sensible</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">defaults.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Press</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">^C</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">anytime</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">to</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">quit.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">package</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">name</span><span style="color:#E1E4E8;"> (quickstart):</span></span>
<span class="line"><span style="color:#B392F0;">entry</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">point</span><span style="color:#E1E4E8;"> (index.ts):</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">Done!</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">A</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">package.json</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">file</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">was</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">saved</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">the</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">current</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">directory.</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">index.ts</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.gitignore</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tsconfig.json</span><span style="color:#E1E4E8;"> (for </span><span style="color:#9ECBFF;">editor</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">auto-complete</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">README.md</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">To</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">get</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">started,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">index.ts</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span></span>
<span class="line"><span style="color:#6F42C1;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span><span style="color:#24292E;"> </span><span style="color:#032F62;">helps</span><span style="color:#24292E;"> </span><span style="color:#032F62;">you</span><span style="color:#24292E;"> </span><span style="color:#032F62;">get</span><span style="color:#24292E;"> </span><span style="color:#032F62;">started</span><span style="color:#24292E;"> </span><span style="color:#032F62;">with</span><span style="color:#24292E;"> </span><span style="color:#032F62;">a</span><span style="color:#24292E;"> </span><span style="color:#032F62;">minimal</span><span style="color:#24292E;"> </span><span style="color:#032F62;">project</span><span style="color:#24292E;"> </span><span style="color:#032F62;">and</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tries</span><span style="color:#24292E;"> </span><span style="color:#032F62;">to</span></span>
<span class="line"><span style="color:#6F42C1;">guess</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sensible</span><span style="color:#24292E;"> </span><span style="color:#032F62;">defaults.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Press</span><span style="color:#24292E;"> </span><span style="color:#032F62;">^C</span><span style="color:#24292E;"> </span><span style="color:#032F62;">anytime</span><span style="color:#24292E;"> </span><span style="color:#032F62;">to</span><span style="color:#24292E;"> </span><span style="color:#032F62;">quit.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">package</span><span style="color:#24292E;"> </span><span style="color:#032F62;">name</span><span style="color:#24292E;"> (quickstart):</span></span>
<span class="line"><span style="color:#6F42C1;">entry</span><span style="color:#24292E;"> </span><span style="color:#032F62;">point</span><span style="color:#24292E;"> (index.ts):</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">Done!</span><span style="color:#24292E;"> </span><span style="color:#032F62;">A</span><span style="color:#24292E;"> </span><span style="color:#032F62;">package.json</span><span style="color:#24292E;"> </span><span style="color:#032F62;">file</span><span style="color:#24292E;"> </span><span style="color:#032F62;">was</span><span style="color:#24292E;"> </span><span style="color:#032F62;">saved</span><span style="color:#24292E;"> </span><span style="color:#032F62;">in</span><span style="color:#24292E;"> </span><span style="color:#032F62;">the</span><span style="color:#24292E;"> </span><span style="color:#032F62;">current</span><span style="color:#24292E;"> </span><span style="color:#032F62;">directory.</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">index.ts</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.gitignore</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tsconfig.json</span><span style="color:#24292E;"> (for </span><span style="color:#032F62;">editor</span><span style="color:#24292E;"> </span><span style="color:#032F62;">auto-complete</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">README.md</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">To</span><span style="color:#24292E;"> </span><span style="color:#032F62;">get</span><span style="color:#24292E;"> </span><span style="color:#032F62;">started,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">index.ts</span></span></code></pre></div><p>由于我们的入口点是一个 <code>*.ts</code> 文件，Bun 会为您生成一个 <code>tsconfig.json</code>。如果您使用纯 JavaScript，它将生成一个 <a href="https://code.visualstudio.com/docs/languages/jsconfig" target="_blank" rel="noreferrer"><code>jsconfig.json</code></a>。</p><h2 id="运行文件" tabindex="-1">运行文件 <a class="header-anchor" href="#运行文件" aria-label="Permalink to &quot;运行文件&quot;">​</a></h2><p>打开 <code>index.ts</code> 并粘贴以下代码片段，它使用 <a href="/api/http.html"><code>Bun.serve</code></a> 实现了一个简单的 HTTP 服务器。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">serve</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  port: </span><span style="color:#79B8FF;">3000</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">fetch</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">req</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Response</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Bun!&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`Listening on http://localhost:\${</span><span style="color:#E1E4E8;">server</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">port</span><span style="color:#9ECBFF;">} ...\`</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">server</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">serve</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  port: </span><span style="color:#005CC5;">3000</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">fetch</span><span style="color:#24292E;">(</span><span style="color:#E36209;">req</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Response</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Bun!&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`Listening on http://localhost:\${</span><span style="color:#24292E;">server</span><span style="color:#032F62;">.</span><span style="color:#24292E;">port</span><span style="color:#032F62;">} ...\`</span><span style="color:#24292E;">);</span></span></code></pre></div><p>从您的 Shell 中运行文件。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">index.ts</span></span>
<span class="line"><span style="color:#B392F0;">Listening</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">on</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">http://localhost:3000</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">...</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">index.ts</span></span>
<span class="line"><span style="color:#6F42C1;">Listening</span><span style="color:#24292E;"> </span><span style="color:#032F62;">on</span><span style="color:#24292E;"> </span><span style="color:#032F62;">http://localhost:3000</span><span style="color:#24292E;"> </span><span style="color:#032F62;">...</span></span></code></pre></div><p>访问 <code>http://localhost:3000</code>来测试服务器。您应该会看到一个简单的页面，上面写着 &quot;Bun!&quot;。</p><h2 id="运行脚本" tabindex="-1">运行脚本 <a class="header-anchor" href="#运行脚本" aria-label="Permalink to &quot;运行脚本&quot;">​</a></h2><p>Bun 还可以执行您的 <code>package.json</code> 中的 <code>&quot;scripts&quot;</code>。添加以下脚本：</p><div class="language-json-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json-diff</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">  {</span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;name&quot;: &quot;quickstart&quot;,</span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;module&quot;: &quot;index.ts&quot;,</span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;type&quot;: &quot;module&quot;,</span></span>
<span class="line"><span style="color:#e1e4e8;">+   &quot;scripts&quot;: {</span></span>
<span class="line"><span style="color:#e1e4e8;">+     &quot;start&quot;: &quot;bun run index.ts&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">+   },</span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;devDependencies&quot;: {</span></span>
<span class="line"><span style="color:#e1e4e8;">      &quot;bun-types&quot;: &quot;^0.7.0&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">    }</span></span>
<span class="line"><span style="color:#e1e4e8;">  }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">  {</span></span>
<span class="line"><span style="color:#24292e;">    &quot;name&quot;: &quot;quickstart&quot;,</span></span>
<span class="line"><span style="color:#24292e;">    &quot;module&quot;: &quot;index.ts&quot;,</span></span>
<span class="line"><span style="color:#24292e;">    &quot;type&quot;: &quot;module&quot;,</span></span>
<span class="line"><span style="color:#24292e;">+   &quot;scripts&quot;: {</span></span>
<span class="line"><span style="color:#24292e;">+     &quot;start&quot;: &quot;bun run index.ts&quot;</span></span>
<span class="line"><span style="color:#24292e;">+   },</span></span>
<span class="line"><span style="color:#24292e;">    &quot;devDependencies&quot;: {</span></span>
<span class="line"><span style="color:#24292e;">      &quot;bun-types&quot;: &quot;^0.7.0&quot;</span></span>
<span class="line"><span style="color:#24292e;">    }</span></span>
<span class="line"><span style="color:#24292e;">  }</span></span></code></pre></div><p>然后使用 <code>bun run start</code> 运行它。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">index.ts</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">Listening</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">on</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">http://localhost:4000...</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">index.ts</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">Listening</span><span style="color:#24292E;"> </span><span style="color:#032F62;">on</span><span style="color:#24292E;"> </span><span style="color:#032F62;">http://localhost:4000...</span></span></code></pre></div><p>⚡️ <strong>性能</strong> — <code>bun run</code> 大约比 <code>npm run</code> 快 28 倍（6 毫秒与 170 毫秒的开销）。</p><h2 id="安装一个包" tabindex="-1">安装一个包 <a class="header-anchor" href="#安装一个包" aria-label="Permalink to &quot;安装一个包&quot;">​</a></h2><p>让我们通过安装一个包使我们的服务器变得更加有趣。首先安装 <code>figlet</code> 包及其类型声明。Figlet 是一个将字符串转换为 ASCII 艺术的实用工具。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">figlet</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-d</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">@types/figlet</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 仅适用于TypeScript用户</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#032F62;">figlet</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-d</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@types/figlet</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 仅适用于TypeScript用户</span></span></code></pre></div><p>更新 <code>index.ts</code> 以在 <code>fetch</code> 处理程序中使用 <code>figlet</code>。</p><div class="language-ts-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts-diff</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">+ import figlet from &quot;figlet&quot;;</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">  const server = Bun.serve({</span></span>
<span class="line"><span style="color:#e1e4e8;">    fetch() {</span></span>
<span class="line"><span style="color:#e1e4e8;">+     const body = figlet.textSync(&quot;Bun!&quot;);</span></span>
<span class="line"><span style="color:#e1e4e8;">+     return new Response(body);</span></span>
<span class="line"><span style="color:#e1e4e8;">-     return new Response(&quot;Bun!&quot;);</span></span>
<span class="line"><span style="color:#e1e4e8;">    },</span></span>
<span class="line"><span style="color:#e1e4e8;">    port: 3000,</span></span>
<span class="line"><span style="color:#e1e4e8;">  });</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">+ import figlet from &quot;figlet&quot;;</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">  const server = Bun.serve({</span></span>
<span class="line"><span style="color:#24292e;">    fetch() {</span></span>
<span class="line"><span style="color:#24292e;">+     const body = figlet.textSync(&quot;Bun!&quot;);</span></span>
<span class="line"><span style="color:#24292e;">+     return new Response(body);</span></span>
<span class="line"><span style="color:#24292e;">-     return new Response(&quot;Bun!&quot;);</span></span>
<span class="line"><span style="color:#24292e;">    },</span></span>
<span class="line"><span style="color:#24292e;">    port: 3000,</span></span>
<span class="line"><span style="color:#24292e;">  });</span></span></code></pre></div><p>重新启动服务器并刷新页面。您应该会看到一个新的 ASCII 艺术横幅。</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">  ____              _</span></span>
<span class="line"><span style="color:#e1e4e8;"> | __ ) _   _ _ __ | |</span></span>
<span class="line"><span style="color:#e1e4e8;"> |  _ \\| | | | &#39;_ \\| |</span></span>
<span class="line"><span style="color:#e1e4e8;"> | |_) | |_| | | | |_|</span></span>
<span class="line"><span style="color:#e1e4e8;"> |____/ \\__,_|_| |_(_)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">  ____              _</span></span>
<span class="line"><span style="color:#24292e;"> | __ ) _   _ _ __ | |</span></span>
<span class="line"><span style="color:#24292e;"> |  _ \\| | | | &#39;_ \\| |</span></span>
<span class="line"><span style="color:#24292e;"> | |_) | |_| | | | |_|</span></span>
<span class="line"><span style="color:#24292e;"> |____/ \\__,_|_| |_(_)</span></span></code></pre></div>`,25),e=[o];function t(c,r,y,E,i,F){return n(),a("div",null,e)}const h=s(l,[["render",t]]);export{u as __pageData,h as default};
