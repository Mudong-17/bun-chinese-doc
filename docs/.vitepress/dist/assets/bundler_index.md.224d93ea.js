import{_ as s}from"./chunks/bundler-speed.791c8ec5.js";import{_ as n,o as a,c as l,Q as p}from"./chunks/framework.33544f09.js";const g=JSON.parse('{"title":"Bun.build","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"bundler/index.md","filePath":"bundler/index.md"}'),o={name:"bundler/index.md"},e=p(`<h1 id="bun-build" tabindex="-1"><code>Bun.build</code> <a class="header-anchor" href="#bun-build" aria-label="Permalink to &quot;\`Bun.build\`&quot;">​</a></h1><p>Bun 的快速本地打包器现在处于测试阶段。可以通过<code>bun build</code>命令行命令或<code>Bun.build()</code>JavaScript API 来使用它。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#JavaScript</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  outdir: </span><span style="color:#9ECBFF;">&#39;./build&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#JavaScript</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  outdir: </span><span style="color:#032F62;">&#39;./build&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-sh#CLI vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh#CLI</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ bun build ./index.tsx --outdir ./build</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ bun build ./index.tsx --outdir ./build</span></span></code></pre></div><p>它很快。下面的数字代表在 esbuild 的<a href="https://github.com/oven-sh/bun/tree/main/bench/bundle" target="_blank" rel="noreferrer">three.js 基准</a>上的性能：</p><p><img src="`+s+`" alt="Bundling 10 copies of three.js from scratch, with sourcemaps and minification"></p><h2 id="为什么需要打包" tabindex="-1">为什么需要打包？ <a class="header-anchor" href="#为什么需要打包" aria-label="Permalink to &quot;为什么需要打包？&quot;">​</a></h2><p>打包器是 JavaScript 生态系统中的一个关键基础设施部分。以下是为什么打包如此重要的简要概述：</p><ul><li><strong>减少 HTTP 请求。</strong> <code>node_modules</code>中的单个包可能包含数百个文件，大型应用程序可能有数十个这样的依赖关系。使用单独的 HTTP 请求加载每个文件变得不可行，因此使用打包器将我们的应用源代码转换为更少数量的自包含“包”，可以使用单个请求加载。</li><li><strong>代码转换。</strong> 现代应用程序通常使用 TypeScript、JSX 和 CSS 模块等语言或工具构建，所有这些都必须在可以由浏览器消耗之前转换为普通 JavaScript 和 CSS。打包器是配置这些转换的自然场所。</li><li><strong>框架特性。</strong> 框架依赖于打包器插件和代码转换来实现常见模式，如文件系统路由、客户端-服务器代码共存（例如<code>getServerSideProps</code>或 Remix 加载程序）和服务器组件。</li></ul><p>让我们深入了解打包器 API。</p><h2 id="基本示例" tabindex="-1">基本示例 <a class="header-anchor" href="#基本示例" aria-label="Permalink to &quot;基本示例&quot;">​</a></h2><p>让我们构建我们的第一个包。你有以下两个文件，它们实现了一个简单的客户端渲染的 React 应用程序。</p><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#index.tsx</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> ReactDOM </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;react-dom/client&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> {Component} </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./Component&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">root</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ReactDOM.</span><span style="color:#B392F0;">createRoot</span><span style="color:#E1E4E8;">(document.</span><span style="color:#B392F0;">getElementById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;root&#39;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">root.</span><span style="color:#B392F0;">render</span><span style="color:#E1E4E8;">(&lt;</span><span style="color:#79B8FF;">Component</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">message</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;Sup!&quot;</span><span style="color:#E1E4E8;"> /&gt;)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#index.tsx</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> ReactDOM </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;react-dom/client&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> {Component} </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./Component&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">root</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ReactDOM.</span><span style="color:#6F42C1;">createRoot</span><span style="color:#24292E;">(document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;root&#39;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">root.</span><span style="color:#6F42C1;">render</span><span style="color:#24292E;">(&lt;</span><span style="color:#005CC5;">Component</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">message</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;Sup!&quot;</span><span style="color:#24292E;"> /&gt;)</span></span></code></pre></div><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#Component.tsx</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Component</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">props</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {</span><span style="color:#FFAB70;">message</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">}) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> &lt;</span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;">&gt;{props.message}&lt;/</span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#Component.tsx</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Component</span><span style="color:#24292E;">(</span><span style="color:#E36209;">props</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {</span><span style="color:#E36209;">message</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">}) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> &lt;</span><span style="color:#22863A;">p</span><span style="color:#24292E;">&gt;{props.message}&lt;/</span><span style="color:#22863A;">p</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>在这里，<code>index.tsx</code>是我们应用程序的“入口点”。通常情况下，这将是执行某些“副作用”的脚本，比如启动服务器或者在这种情况下初始化一个 React 根。因为我们使用了 TypeScript 和 JSX，所以我们需要在将代码发送到浏览器之前对它进行打包。</p><p>要创建我们的包：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#JavaScript</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#JavaScript</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span></span></code></pre></div><p>对于<code>entrypoints</code>中指定的每个文件，Bun 将生成一个新的包。此包将写入磁盘中的<code>./out</code>目录（根据当前工作目录解析而来）。运行构建后，文件系统看起来像这样：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">.</span></span>
<span class="line"><span style="color:#e1e4e8;">├── index.tsx</span></span>
<span class="line"><span style="color:#e1e4e8;">├── Component.tsx</span></span>
<span class="line"><span style="color:#e1e4e8;">└── out</span></span>
<span class="line"><span style="color:#e1e4e8;">    └── index.js</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">.</span></span>
<span class="line"><span style="color:#24292e;">├── index.tsx</span></span>
<span class="line"><span style="color:#24292e;">├── Component.tsx</span></span>
<span class="line"><span style="color:#24292e;">└── out</span></span>
<span class="line"><span style="color:#24292e;">    └── index.js</span></span></code></pre></div><p><code>out/index.js</code>的内容将类似于以下内容：</p><div class="language-js#out/index.js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js#out/index.js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">// ...</span></span>
<span class="line"><span style="color:#e1e4e8;">// ~20k行代码</span></span>
<span class="line"><span style="color:#e1e4e8;">// 包括\`react-dom/client\`及其所有依赖项的内容</span></span>
<span class="line"><span style="color:#e1e4e8;">// 这是$jsxDEV和$createRoot函数的定义位置</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">// Component.tsx</span></span>
<span class="line"><span style="color:#e1e4e8;">function Component(props) {</span></span>
<span class="line"><span style="color:#e1e4e8;">  return $jsxDEV(&quot;p&quot;, {</span></span>
<span class="line"><span style="color:#e1e4e8;">    children: props.message</span></span>
<span class="line"><span style="color:#e1e4e8;">  }, undefined, false, undefined, this);</span></span>
<span class="line"><span style="color:#e1e4e8;">}</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">// index.tsx</span></span>
<span class="line"><span style="color:#e1e4e8;">var rootNode = document.getElementById(&quot;root&quot;);</span></span>
<span class="line"><span style="color:#e1e4e8;">var root = $createRoot(rootNode);</span></span>
<span class="line"><span style="color:#e1e4e8;">root.render($jsxDEV(Component, {</span></span>
<span class="line"><span style="color:#e1e4e8;">  message: &quot;Sup!&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">}, undefined, false, undefined, this));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">// ...</span></span>
<span class="line"><span style="color:#24292e;">// ~20k行代码</span></span>
<span class="line"><span style="color:#24292e;">// 包括\`react-dom/client\`及其所有依赖项的内容</span></span>
<span class="line"><span style="color:#24292e;">// 这是$jsxDEV和$createRoot函数的定义位置</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">// Component.tsx</span></span>
<span class="line"><span style="color:#24292e;">function Component(props) {</span></span>
<span class="line"><span style="color:#24292e;">  return $jsxDEV(&quot;p&quot;, {</span></span>
<span class="line"><span style="color:#24292e;">    children: props.message</span></span>
<span class="line"><span style="color:#24292e;">  }, undefined, false, undefined, this);</span></span>
<span class="line"><span style="color:#24292e;">}</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">// index.tsx</span></span>
<span class="line"><span style="color:#24292e;">var rootNode = document.getElementById(&quot;root&quot;);</span></span>
<span class="line"><span style="color:#24292e;">var root = $createRoot(rootNode);</span></span>
<span class="line"><span style="color:#24292e;">root.render($jsxDEV(Component, {</span></span>
<span class="line"><span style="color:#24292e;">  message: &quot;Sup!&quot;</span></span>
<span class="line"><span style="color:#24292e;">}, undefined, false, undefined, this));</span></span></code></pre></div><p><strong>教程：在浏览器中运行此文件</strong> 我们可以在浏览器中加载此文件，以查看我们的应用程序的运行情况。在<code>out</code>目录中创建一个<code>index.html</code>文件：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">touch</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">out/index.html</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">touch</span><span style="color:#24292E;"> </span><span style="color:#032F62;">out/index.html</span></span></code></pre></div><p>然后将以下内容粘贴到其中：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">html</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;root&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;module&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">src</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;/index.js&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">html</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">html</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;root&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;module&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">src</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;/index.js&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">html</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>然后启动一个静态文件服务器，以提供<code>out</code>目录：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bunx</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">serve</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">out</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bunx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">serve</span><span style="color:#24292E;"> </span><span style="color:#032F62;">out</span></span></code></pre></div><p>访问<code>http://localhost:5000</code>以查看您的打包应用</p><p>程序。</p><h2 id="监视模式" tabindex="-1">监视模式 <a class="header-anchor" href="#监视模式" aria-label="Permalink to &quot;监视模式&quot;">​</a></h2><p>与运行时和测试运行程序一样，打包器本地支持监视模式。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--watch</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--watch</span></span></code></pre></div><h2 id="内容类型" tabindex="-1">内容类型 <a class="header-anchor" href="#内容类型" aria-label="Permalink to &quot;内容类型&quot;">​</a></h2><p>与 Bun 运行时一样，打包器本地支持一系列的文件类型。以下表格详细介绍了打包器的标准“加载器”集合。有关完整文档，请参阅<a href="/runtime/loaders.html">Bundler &gt; 文件类型</a>。</p><p>下面是您提供的内容转换为 Markdown 表格的结果：</p><table><thead><tr><th>扩展名</th><th>详情</th></tr></thead><tbody><tr><td><code>.js</code> <code>.cjs</code> <code>.mjs</code> <code>.mts</code> <code>.cts</code> <code>.ts</code> <code>.tsx</code></td><td>使用 Bun 内置的转换器解析文件，并将 TypeScript/JSX 语法转译为普通的 JavaScript。打包器执行一组默认转换，包括死代码消除、树摇和环境变量内联。目前，Bun 不会尝试降级语法；如果您使用最近的 ECMAScript 语法，它将反映在打包的代码中。</td></tr><tr><td><code>.json</code></td><td>JSON 文件被解析并内联到包中作为 JavaScript 对象。</td></tr><tr><td><code>.toml</code></td><td>TOML 文件被解析并内联到包中作为 JavaScript 对象。</td></tr><tr><td><code>.txt</code></td><td>文本文件的内容被读取并内联到包中作为字符串。</td></tr><tr><td><code>.node</code> <code>.wasm</code></td><td>这些文件在 Bun 运行时中受支持，但在打包时被视为<a href="#资源">资源</a>。</td></tr></tbody></table><p>请注意，Markdown 表格中的标题行是由第一个列表项定义的，而列表项之间的分割线是由<code>---</code>行定义的。</p><h3 id="资源" tabindex="-1">资源 <a class="header-anchor" href="#资源" aria-label="Permalink to &quot;资源&quot;">​</a></h3><p>如果打包器遇到一个带有未识别扩展名的导入，它会将被导入的文件视为<em>外部文件</em>。引用的文件会原样复制到<code>outdir</code>中，导入将被解析为文件的路径。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#Input</span></span>
<span class="line"><span style="color:#6A737D;">// bundle入口点</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> logo </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./logo.svg&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(logo);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#Input</span></span>
<span class="line"><span style="color:#6A737D;">// bundle入口点</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> logo </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./logo.svg&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(logo);</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#Output</span></span>
<span class="line"><span style="color:#6A737D;">// 打包输出</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> logo </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./logo-ab237dfe.svg&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(logo);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#Output</span></span>
<span class="line"><span style="color:#6A737D;">// 打包输出</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> logo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./logo-ab237dfe.svg&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(logo);</span></span></code></pre></div><blockquote><p>文件加载器的确切行为也受到<a href="#naming"><code>命名</code></a>和<a href="#publicpath"><code>publicPath</code></a>的影响。</p></blockquote><p>有关文件加载器的更完整文档，请参阅<a href="/bundler/loaders.html#file">Bundler &gt; 加载器</a>页面。</p><h3 id="插件" tabindex="-1">插件 <a class="header-anchor" href="#插件" aria-label="Permalink to &quot;插件&quot;">​</a></h3><p>此表中描述的行为可以使用<a href="/bundler/plugins.html">插件</a>覆盖或扩展。请参阅<a href="/bundler/plugins.html">打包程序 &gt; 加载器</a>页面以获得完整的文档。</p><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="entrypoints" tabindex="-1"><code>entrypoints</code> <a class="header-anchor" href="#entrypoints" aria-label="Permalink to &quot;\`entrypoints\`&quot;">​</a></h3><p>**必需项。**一个数组，其中包含我们应用程序的入口点的路径。将为每个入口点生成一个包。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#JavaScript</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  entrypoints: [</span><span style="color:#9ECBFF;">&quot;./index.ts&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; { success: boolean, outputs: BuildArtifact[], logs: BuildMessage[] }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#JavaScript</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">result</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  entrypoints: [</span><span style="color:#032F62;">&quot;./index.ts&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; { success: boolean, outputs: BuildArtifact[], logs: BuildMessage[] }</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--entrypoints</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.ts</span></span>
<span class="line"><span style="color:#6A737D;"># 包将打印到stdout</span></span>
<span class="line"><span style="color:#6A737D;"># &lt;打包的代码&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--entrypoints</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.ts</span></span>
<span class="line"><span style="color:#6A737D;"># 包将打印到stdout</span></span>
<span class="line"><span style="color:#6A737D;"># &lt;打包的代码&gt;</span></span></code></pre></div><h3 id="outdir" tabindex="-1"><code>outdir</code> <a class="header-anchor" href="#outdir" aria-label="Permalink to &quot;\`outdir\`&quot;">​</a></h3><p>将输出文件写入的目录。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#JavaScript</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.ts&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; { success: boolean, outputs: BuildArtifact[], logs: BuildMessage[] }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#JavaScript</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">result</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  entrypoints: [</span><span style="color:#032F62;">&#39;./index.ts&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; { success: boolean, outputs: BuildArtifact[], logs: BuildMessage[] }</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--entrypoints</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.ts</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span></span>
<span class="line"><span style="color:#6A737D;"># 将打印捆绑文件的摘要到stdout</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--entrypoints</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.ts</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span></span>
<span class="line"><span style="color:#6A737D;"># 将打印捆绑文件的摘要到stdout</span></span></code></pre></div><p>如果未将<code>outdir</code>传递给 JavaScript API，则捆绑的代码将不会写入磁盘。捆绑文件以<code>BuildArtifact</code>对象数组的形式返回。这些对象是带有额外属性的 Blob；请参阅<a href="#输出">输出</a>以获取完整的文档。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  entrypoints: [</span><span style="color:#9ECBFF;">&quot;./index.ts&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> result.outputs) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 可以作为blob消耗</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> result.</span><span style="color:#B392F0;">text</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// Bun将设置Content-Type和Etag头</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Response</span><span style="color:#E1E4E8;">(result);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 也可以手动写入，但在这种情况下应该使用\`outdir\`。</span></span>
<span class="line"><span style="color:#E1E4E8;">  Bun.</span><span style="color:#B392F0;">write</span><span style="color:#E1E4E8;">(path.</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;out&quot;</span><span style="color:#E1E4E8;">, result.path), result);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">result</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  entrypoints: [</span><span style="color:#032F62;">&quot;./index.ts&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">result</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">of</span><span style="color:#24292E;"> result.outputs) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 可以作为blob消耗</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> result.</span><span style="color:#6F42C1;">text</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// Bun将设置Content-Type和Etag头</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Response</span><span style="color:#24292E;">(result);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 也可以手动写入，但在这种情况下应该使用\`outdir\`。</span></span>
<span class="line"><span style="color:#24292E;">  Bun.</span><span style="color:#6F42C1;">write</span><span style="color:#24292E;">(path.</span><span style="color:#6F42C1;">join</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;out&quot;</span><span style="color:#24292E;">, result.path), result);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>当设置了<code>outdir</code>时，<code>BuildArtifact</code>上的<code>path</code>属性将是写入时的绝对路径。</p><h3 id="target" tabindex="-1"><code>target</code> <a class="header-anchor" href="#target" aria-label="Permalink to &quot;\`target\`&quot;">​</a></h3><p>捆绑包的预期执行环境。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#JavaScript</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.ts&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  target: </span><span style="color:#9ECBFF;">&#39;browser&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 默认值</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#JavaScript</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  entrypoints: [</span><span style="color:#032F62;">&#39;./index.ts&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  target: </span><span style="color:#032F62;">&#39;browser&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 默认值</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--entrypoints</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.ts</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--target</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">browser</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--entrypoints</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.ts</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--target</span><span style="color:#24292E;"> </span><span style="color:#032F62;">browser</span></span></code></pre></div><p>根据目标，Bun 将应用不同的模块解析规则和优化。</p><table><thead><tr><th></th><th>描述</th></tr></thead><tbody><tr><td><code>browser</code></td><td><em>默认值。</em> 用于生成打算在浏览器中执行的包。在解析导入时，优先考虑<code>&quot;browser&quot;</code>导出条件。导入任何内置模块，如<code>node:events</code>或<code>node:path</code>都可以工作，但调用某些函数，如<code>fs.readFile</code>将无法工作。</td></tr><tr><td><code>bun</code></td><td>用于生成打算在 Bun 运行时中运行的包。在许多情况下，不需要打包服务器端代码；可以直接执行源代码而无需修改。然而，打包服务器代码可以减少启动时间并提高运行性能。使用<code>target: &quot;bun&quot;</code>生成的所有包都带有特殊的<code>// @bun</code>预处理指令，该指令告诉 Bun 运行时无需在执行之前重新转译文件。如果任何入口点包含 Bun shebang（<code>#!/usr/bin/env bun</code>），打包器将默认为<code>target: &quot;bun&quot;</code>，而不是<code>&quot;browser&quot;</code>。</td></tr><tr><td><code>node</code></td><td>用于生成打算在 Node.js 中运行的包。在解析导入时，优先考虑<code>&quot;node&quot;</code>导出条件，并输出<code>.mjs</code>。未来，这将自动填充<code>Bun</code>全局对象和其他内置的<code>bun:*</code>模块，尽管目前尚未实现。</td></tr></tbody></table><h3 id="format" tabindex="-1"><code>format</code> <a class="header-anchor" href="#format" aria-label="Permalink to &quot;\`format\`&quot;">​</a></h3><p>指定生成包中使用的模块格式。</p><p>目前，打包器仅支持一种模块格式：<code>&quot;esm&quot;</code>。计划支持<code>&quot;cjs&quot;</code>和<code>&quot;iife&quot;</code>。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#JavaScript</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  format: </span><span style="color:#9ECBFF;">&quot;esm&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#JavaScript</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  format: </span><span style="color:#032F62;">&quot;esm&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--format</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">esm</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--format</span><span style="color:#24292E;"> </span><span style="color:#032F62;">esm</span></span></code></pre></div><h3 id="splitting" tabindex="-1"><code>splitting</code> <a class="header-anchor" href="#splitting" aria-label="Permalink to &quot;\`splitting\`&quot;">​</a></h3><p>是否启用代码分割。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#JavaScript</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  splitting: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 默认值</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#JavaScript</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  splitting: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 默认值</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--splitting</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--splitting</span></span></code></pre></div><p>当设置为<code>true</code>时，打包器将启用 <em>代码分割</em>。当多个入口点都导入相同的文件、模块或一组文件/模块时，将这些共享代码拆分到一个单独的包中通常很有用。这个共享的包被称为 <em>chunk</em>。考虑以下文件：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#entry</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">a.ts</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { shared } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./shared.ts&#39;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#entry</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">a.ts</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { shared } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./shared.ts&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#entry</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">b.ts</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { shared } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./shared.ts&#39;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#entry</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">b.ts</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { shared } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./shared.ts&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#shared.ts</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">shared</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;shared&#39;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#shared.ts</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">shared</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;shared&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div><p>启用代码拆分的情况下，要捆绑<code>entry-a.ts</code>和<code>entry-b.ts</code>：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#JavaScript</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  entrypoints: [</span><span style="color:#9ECBFF;">&#39;./entry-a.ts&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;./entry-b.ts&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  splitting: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#JavaScript</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  entrypoints: [</span><span style="color:#032F62;">&#39;./entry-a.ts&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;./entry-b.ts&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  splitting: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./entry-a.ts</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./entry-b.ts</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--splitting</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./entry-a.ts</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./entry-b.ts</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--splitting</span></span></code></pre></div><p>运行此构建将生成以下文件：</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">.</span></span>
<span class="line"><span style="color:#e1e4e8;">├── entry-a.tsx</span></span>
<span class="line"><span style="color:#e1e4e8;">├── entry-b.tsx</span></span>
<span class="line"><span style="color:#e1e4e8;">├── shared.tsx</span></span>
<span class="line"><span style="color:#e1e4e8;">└── out</span></span>
<span class="line"><span style="color:#e1e4e8;">    ├── entry-a.js</span></span>
<span class="line"><span style="color:#e1e4e8;">    ├── entry-b.js</span></span>
<span class="line"><span style="color:#e1e4e8;">    └── chunk-2fce6291bf86559d.js</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">.</span></span>
<span class="line"><span style="color:#24292e;">├── entry-a.tsx</span></span>
<span class="line"><span style="color:#24292e;">├── entry-b.tsx</span></span>
<span class="line"><span style="color:#24292e;">├── shared.tsx</span></span>
<span class="line"><span style="color:#24292e;">└── out</span></span>
<span class="line"><span style="color:#24292e;">    ├── entry-a.js</span></span>
<span class="line"><span style="color:#24292e;">    ├── entry-b.js</span></span>
<span class="line"><span style="color:#24292e;">    └── chunk-2fce6291bf86559d.js</span></span></code></pre></div><p>生成的<code>chunk-2fce6291bf86559d.js</code>文件包含了共享的代码。为避免冲突，默认情况下文件名会自动包含内容哈希。这可以通过<a href="#naming"><code>naming</code></a>进行自定义。</p><h3 id="plugins" tabindex="-1"><code>plugins</code> <a class="header-anchor" href="#plugins" aria-label="Permalink to &quot;\`plugins\`&quot;">​</a></h3><p>要在捆绑过程中使用的插件列表。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#JavaScript</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  plugins: [</span><span style="color:#6A737D;">/* ... */</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#JavaScript</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  plugins: [</span><span style="color:#6A737D;">/* ... */</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#B392F0;">n/a</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#6F42C1;">n/a</span></span></code></pre></div><p>Bun 实现了一个通用的插件系统，可用于 Bun 的运行时和打包器。有关完整文档，请参阅<a href="/bundler/plugins.html">插件文档</a>。</p><h3 id="sourcemap" tabindex="-1"><code>sourcemap</code> <a class="header-anchor" href="#sourcemap" aria-label="Permalink to &quot;\`sourcemap\`&quot;">​</a></h3><p>指定要生成的源映射的类型。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#JavaScript</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  sourcemap: </span><span style="color:#9ECBFF;">&quot;external&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 默认值是 &quot;none&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#JavaScript</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  sourcemap: </span><span style="color:#032F62;">&quot;external&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 默认值是 &quot;none&quot;</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--sourcemap=external</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--sourcemap=external</span></span></code></pre></div><table><thead><tr><th></th><th>描述</th></tr></thead><tbody><tr><td><code>&quot;none&quot;</code></td><td><em>默认值。</em> 不生成源映射。</td></tr><tr><td><code>&quot;inline&quot;</code></td><td>生成源映射，并将其作为 base64 数据附加到生成的捆绑包的末尾。</td></tr><tr><td><code>&quot;external&quot;</code></td><td>为每个 <code>*.js</code> 捆绑包旁边创建一个单独的 <code>*.js.map</code> 文件。</td></tr></tbody></table><blockquote><p>生成的捆绑包包含一个<a href="https://sentry.engineering/blog/the-case-for-debug-ids" target="_blank" rel="noreferrer">调试 ID</a>，可用于将捆绑包与其相应的源映射关联起来。此<code>debugId</code>作为注释添加到文件底部。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// &lt;生成的捆绑包代码&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//# debugId=&lt;DEBUG ID&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// &lt;生成的捆绑包代码&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//# debugId=&lt;DEBUG ID&gt;</span></span></code></pre></div><p>关联的<code>*.js.map</code>源映射文件将是一个包含等效<code>debugId</code>属性的 JSON 文件。</p></blockquote><h3 id="minify" tabindex="-1"><code>minify</code> <a class="header-anchor" href="#minify" aria-label="Permalink to &quot;\`minify\`&quot;">​</a></h3><p>是否启用缩小。默认<code>false</code>。</p><blockquote><p>当目标是<code>bun</code>时，默认情况下会缩小标识符。</p></blockquote><p>要启用所有缩小选项：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#JavaScript</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  minify: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 默认值是 false</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#JavaScript</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  minify: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 默认值是 false</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--minify</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--minify</span></span></code></pre></div><p>要逐个启用某些缩小选项：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#JavaScript</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  minify: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    whitespace: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    identifiers: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    syntax: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#JavaScript</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  minify: {</span></span>
<span class="line"><span style="color:#24292E;">    whitespace: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    identifiers: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    syntax: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--minify-whitespace</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--minify-identifiers</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--minify-syntax</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--minify-whitespace</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--minify-identifiers</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--minify-syntax</span></span></code></pre></div><h3 id="external" tabindex="-1"><code>external</code> <a class="header-anchor" href="#external" aria-label="Permalink to &quot;\`external\`&quot;">​</a></h3><p>要考虑为“外部”的导入路径列表。默认值为<code>[]</code>。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#JavaScript</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  external: [</span><span style="color:#9ECBFF;">&quot;lodash&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;react&quot;</span><span style="color:#E1E4E8;">], </span><span style="color:#6A737D;">// 默认值: []</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#JavaScript</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  external: [</span><span style="color:#032F62;">&quot;lodash&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;react&quot;</span><span style="color:#24292E;">], </span><span style="color:#6A737D;">// 默认值: []</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--external</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">lodash</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--external</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">react</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--external</span><span style="color:#24292E;"> </span><span style="color:#032F62;">lodash</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--external</span><span style="color:#24292E;"> </span><span style="color:#032F62;">react</span></span></code></pre></div><h3 id="naming" tabindex="-1"><code>naming</code> <a class="header-anchor" href="#naming" aria-label="Permalink to &quot;\`naming\`&quot;">​</a></h3><p>自定义生成的文件名。默认为<code>./[dir]/[name].[ext]</code>。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#JavaScript</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  naming: </span><span style="color:#9ECBFF;">&quot;[dir]/[name].[ext]&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 默认值</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#JavaScript</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  naming: </span><span style="color:#032F62;">&quot;[dir]/[name].[ext]&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 默认值</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--entry-naming</span><span style="color:#E1E4E8;"> [dir]/[name].[ext]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--entry-naming</span><span style="color:#24292E;"> [dir]/[name].[ext]</span></span></code></pre></div><p>默认情况下，生成的捆绑包的名称基于与入口点相关联的名称。</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">.</span></span>
<span class="line"><span style="color:#e1e4e8;">├── index.tsx</span></span>
<span class="line"><span style="color:#e1e4e8;">└── out</span></span>
<span class="line"><span style="color:#e1e4e8;">    └── index.js</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">.</span></span>
<span class="line"><span style="color:#24292e;">├── index.tsx</span></span>
<span class="line"><span style="color:#24292e;">└── out</span></span>
<span class="line"><span style="color:#24292e;">    └── index.js</span></span></code></pre></div><p>对于具有多个入口点的情况，生成的文件层次结构将反映入口点的目录结构。</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">.</span></span>
<span class="line"><span style="color:#e1e4e8;">├── index.tsx</span></span>
<span class="line"><span style="color:#e1e4e8;">└── nested</span></span>
<span class="line"><span style="color:#e1e4e8;">    └── index.tsx</span></span>
<span class="line"><span style="color:#e1e4e8;">└── out</span></span>
<span class="line"><span style="color:#e1e4e8;">    ├── index.js</span></span>
<span class="line"><span style="color:#e1e4e8;">    └── nested</span></span>
<span class="line"><span style="color:#e1e4e8;">        └── index.js</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">.</span></span>
<span class="line"><span style="color:#24292e;">├── index.tsx</span></span>
<span class="line"><span style="color:#24292e;">└── nested</span></span>
<span class="line"><span style="color:#24292e;">    └── index.tsx</span></span>
<span class="line"><span style="color:#24292e;">└── out</span></span>
<span class="line"><span style="color:#24292e;">    ├── index.js</span></span>
<span class="line"><span style="color:#24292e;">    └── nested</span></span>
<span class="line"><span style="color:#24292e;">        └── index.js</span></span></code></pre></div><p>生成的文件的名称和位置可以使用<code>naming</code>字段进行自定义。此字段接受一个模板字符串，用于生成与入口点对应的所有捆绑包的文件名，其中以下标记将替换为其对应的值：</p><ul><li><code>[name]</code> - 入口点文件的名称，不包括扩展名。</li><li><code>[ext]</code> - 生成的捆绑包的扩展名。</li><li><code>[hash]</code> - 捆绑包内容的哈希。</li><li><code>[dir]</code> - 从构建根目录到文件的父目录的相对路径。</li></ul><p>例如：</p><table><thead><tr><th>标记</th><th>[name]</th><th>[ext]</th><th>[hash]</th><th>[dir]</th></tr></thead><tbody><tr><td><code>./index.tsx</code></td><td><code>index</code></td><td><code>js</code></td><td><code>a1b2c3d4</code></td><td><code>&quot;&quot;</code>（空字符串）</td></tr><tr><td><code>./nested/entry.ts</code></td><td><code>entry</code></td><td><code>js</code></td><td><code>c3d4e5f6</code></td><td><code>&quot;nested&quot;</code></td></tr></tbody></table><p>我们可以组合这些标记以创建一个模板字符串。例如，要在生成的捆绑包名称中包含哈希：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#JavaScript</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  naming: </span><span style="color:#9ECBFF;">&#39;files/[dir]/[name]-[hash].[ext]&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#JavaScript</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  naming: </span><span style="color:#032F62;">&#39;files/[dir]/[name]-[hash].[ext]&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--entry-naming</span><span style="color:#E1E4E8;"> [name]-[hash].[ext]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--entry-naming</span><span style="color:#24292E;"> [name]-[hash].[ext]</span></span></code></pre></div><p>这个构建将导致以下文件结构：</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">.</span></span>
<span class="line"><span style="color:#e1e4e8;">├── index.tsx</span></span>
<span class="line"><span style="color:#e1e4e8;">└── out</span></span>
<span class="line"><span style="color:#e1e4e8;">    └── files</span></span>
<span class="line"><span style="color:#e1e4e8;">        └── index-a1b2c3d4.js</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">.</span></span>
<span class="line"><span style="color:#24292e;">├── index.tsx</span></span>
<span class="line"><span style="color:#24292e;">└── out</span></span>
<span class="line"><span style="color:#24292e;">    └── files</span></span>
<span class="line"><span style="color:#24292e;">        └── index-a1b2c3d4.js</span></span></code></pre></div><p>当为<code>naming</code>字段提供一个字符串时，它仅用于与入口点对应的捆绑包。分块和复制的资产的名称不受影响。使用 JavaScript API，可以为每种生成的文件类型指定单独的模板字符串。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#JavaScript</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  naming: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 默认值</span></span>
<span class="line"><span style="color:#E1E4E8;">    entry: </span><span style="color:#9ECBFF;">&#39;[dir]/[name].[ext]&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    chunk: </span><span style="color:#9ECBFF;">&#39;[name]-[hash].[ext]&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    asset: </span><span style="color:#9ECBFF;">&#39;[name]-[hash].[ext]&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#JavaScript</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  naming: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 默认值</span></span>
<span class="line"><span style="color:#24292E;">    entry: </span><span style="color:#032F62;">&#39;[dir]/[name].[ext]&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    chunk: </span><span style="color:#032F62;">&#39;[name]-[hash].[ext]&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    asset: </span><span style="color:#032F62;">&#39;[name]-[hash].[ext]&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--entry-naming</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;[dir]/[name].[ext]&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--chunk-naming</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;[name]-[hash].[ext]&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--asset-naming</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;[name]-[hash].[ext]&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--entry-naming</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;[dir]/[name].[ext]&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--chunk-naming</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;[name]-[hash].[ext]&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--asset-naming</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;[name]-[hash].[ext]&quot;</span></span></code></pre></div><p>以下是文档中除代码部分的内容的翻译：</p><h3 id="root" tabindex="-1"><code>root</code> <a class="header-anchor" href="#root" aria-label="Permalink to &quot;\`root\`&quot;">​</a></h3><p>项目的根目录。</p><p>如果未指定根目录，它将被计算为所有入口文件的第一个共同祖先。考虑以下文件结构：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">.</span></span>
<span class="line"><span style="color:#e1e4e8;">└── pages</span></span>
<span class="line"><span style="color:#e1e4e8;">  └── index.tsx</span></span>
<span class="line"><span style="color:#e1e4e8;">  └── settings.tsx</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">.</span></span>
<span class="line"><span style="color:#24292e;">└── pages</span></span>
<span class="line"><span style="color:#24292e;">  └── index.tsx</span></span>
<span class="line"><span style="color:#24292e;">  └── settings.tsx</span></span></code></pre></div><p>我们可以构建<code>pages</code>目录中的两个入口点：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#JavaScript</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  entrypoints: [</span><span style="color:#9ECBFF;">&#39;./pages/index.tsx&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;./pages/settings.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#JavaScript</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  entrypoints: [</span><span style="color:#032F62;">&#39;./pages/index.tsx&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;./pages/settings.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./pages/index.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./pages/settings.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./pages/index.tsx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./pages/settings.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span></span></code></pre></div><p>这将导致以下文件结构：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">.</span></span>
<span class="line"><span style="color:#e1e4e8;">└── pages</span></span>
<span class="line"><span style="color:#e1e4e8;">  └── index.tsx</span></span>
<span class="line"><span style="color:#e1e4e8;">  └── settings.tsx</span></span>
<span class="line"><span style="color:#e1e4e8;">└── out</span></span>
<span class="line"><span style="color:#e1e4e8;">  └── index.js</span></span>
<span class="line"><span style="color:#e1e4e8;">  └── settings.js</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">.</span></span>
<span class="line"><span style="color:#24292e;">└── pages</span></span>
<span class="line"><span style="color:#24292e;">  └── index.tsx</span></span>
<span class="line"><span style="color:#24292e;">  └── settings.tsx</span></span>
<span class="line"><span style="color:#24292e;">└── out</span></span>
<span class="line"><span style="color:#24292e;">  └── index.js</span></span>
<span class="line"><span style="color:#24292e;">  └── settings.js</span></span></code></pre></div><p>由于<code>pages</code>目录是入口点文件的第一个共同祖先，因此它被视为项目的根目录。这意味着生成的捆绑包位于<code>out</code>目录的顶层；没有<code>out/pages</code>目录。</p><p>可以通过指定<code>root</code>选项来覆盖此行为：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#JavaScript</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  entrypoints: [</span><span style="color:#9ECBFF;">&#39;./pages/index.tsx&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;./pages/settings.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  root: </span><span style="color:#9ECBFF;">&#39;.&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#JavaScript</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  entrypoints: [</span><span style="color:#032F62;">&#39;./pages/index.tsx&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;./pages/settings.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  root: </span><span style="color:#032F62;">&#39;.&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./pages/index.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./pages/settings.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--root</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#CLI</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./pages/index.tsx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./pages/settings.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--root</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.</span></span></code></pre></div><p>通过将<code>root</code>设置为<code>.</code>，生成的文件结构将如下所示：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">.</span></span>
<span class="line"><span style="color:#e1e4e8;">└── pages</span></span>
<span class="line"><span style="color:#e1e4e8;">  └── index.tsx</span></span>
<span class="line"><span style="color:#e1e4e8;">  └── settings.tsx</span></span>
<span class="line"><span style="color:#e1e4e8;">└── out</span></span>
<span class="line"><span style="color:#e1e4e8;">  └── pages</span></span>
<span class="line"><span style="color:#e1e4e8;">    └── index.js</span></span>
<span class="line"><span style="color:#e1e4e8;">    └── settings.js</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">.</span></span>
<span class="line"><span style="color:#24292e;">└── pages</span></span>
<span class="line"><span style="color:#24292e;">  └── index.tsx</span></span>
<span class="line"><span style="color:#24292e;">  └── settings.tsx</span></span>
<span class="line"><span style="color:#24292e;">└── out</span></span>
<span class="line"><span style="color:#24292e;">  └── pages</span></span>
<span class="line"><span style="color:#24292e;">    └── index.js</span></span>
<span class="line"><span style="color:#24292e;">    └── settings.js</span></span></code></pre></div><h3 id="publicpath" tabindex="-1"><code>publicPath</code> <a class="header-anchor" href="#publicpath" aria-label="Permalink to &quot;\`publicPath\`&quot;">​</a></h3><p>要附加到捆绑代码中的任何导入路径的前缀。</p><p>在许多情况下，生成的捆绑包将不包含任何<code>import</code>语句。毕竟，捆绑的目标是将所有代码合并到单个文件中。但是，生成的捆绑包可能会包含<code>import</code>语句的情况。</p><ul><li><strong>资源导入</strong> - 当导入未识别的文件类型，例如<code>*.svg</code>时，捆绑器将使用<a href="/bundler/loaders.html#file"><code>file</code>加载器</a>来复制文件到<code>outdir</code>中。导入将转换为变量。</li><li><strong>外部模块</strong> - 文件和模块可以标记为<a href="#external"><code>external</code></a>，在这种情况下，它们不会包含在捆绑包中。相反，<code>import</code>语句将保留在最终捆绑包中。</li><li><strong>分块</strong>。当启用<a href="#splitting"><code>splitting</code></a>时，捆绑器可能会生成单独的“块”文件，表示在多个入口点之间共享的代码。</li></ul><p>在这些情况下，最终捆绑包可能会包含指向其他文件的路径。默认情况下，这些导入是相对的。以下是一个简单资源导入的示例：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#Input</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> logo </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./logo.svg&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(logo);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#Input</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> logo </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./logo.svg&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(logo);</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#Output</span></span>
<span class="line"><span style="color:#6A737D;">// 将logo.svg复制到&lt;outdir&gt;</span></span>
<span class="line"><span style="color:#6A737D;">// 并添加哈希以防止冲突</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> logo </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./logo-a7305bdef.svg&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(logo);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#Output</span></span>
<span class="line"><span style="color:#6A737D;">// 将logo.svg复制到&lt;outdir&gt;</span></span>
<span class="line"><span style="color:#6A737D;">// 并添加哈希以防止冲突</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> logo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./logo-a7305bdef.svg&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(logo);</span></span></code></pre></div><p>通过设置<code>publicPath</code>，将在所有文件路径前添加指定的值。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#JavaScript</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  publicPath: </span><span style="color:#9ECBFF;">&#39;https://cdn.example.com/&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 默认为未定义</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#JavaScript</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  publicPath: </span><span style="color:#032F62;">&#39;https://cdn.example.com/&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 默认为未定义</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p>输出文件现在将类似于以下内容：</p><div class="language-ts-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts-diff</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">#Output</span></span>
<span class="line"><span style="color:#e1e4e8;">- var logo = &#39;./logo-a7305bdef.svg&#39;;</span></span>
<span class="line"><span style="color:#e1e4e8;">+ var logo = &#39;https://cdn.example.com/logo-a7305bdef.svg&#39;;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">#Output</span></span>
<span class="line"><span style="color:#24292e;">- var logo = &#39;./logo-a7305bdef.svg&#39;;</span></span>
<span class="line"><span style="color:#24292e;">+ var logo = &#39;https://cdn.example.com/logo-a7305bdef.svg&#39;;</span></span></code></pre></div><h3 id="define" tabindex="-1"><code>define</code> <a class="header-anchor" href="#define" aria-label="Permalink to &quot;\`define\`&quot;">​</a></h3><p>全局标识符的映射，用于在构建时替换。此对象的键是标识符名称，值是将内联的 JSON 字符串。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#JavaScript</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  define: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    STRING: </span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">stringify</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;value&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;nested.boolean&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;true&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#JavaScript</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  define: {</span></span>
<span class="line"><span style="color:#24292E;">    STRING: </span><span style="color:#005CC5;">JSON</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">stringify</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;value&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;nested.boolean&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;true&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="loader" tabindex="-1"><code>loader</code> <a class="header-anchor" href="#loader" aria-label="Permalink to &quot;\`loader\`&quot;">​</a></h3><p>文件扩展名到<a href="https://bun.sh/docs/bundler/loaders#built-in-loaders" target="_blank" rel="noreferrer">内置加载器名称</a>的映射。这可用于快速自定义某些文件的加载方式。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#JavaScript</span></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  loader: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;.png&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;dataurl&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;.txt&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;file&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#JavaScript</span></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  loader: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;.png&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;dataurl&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;.txt&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;file&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h2 id="输出" tabindex="-1">输出 <a class="header-anchor" href="#输出" aria-label="Permalink to &quot;输出&quot;">​</a></h2><p><code>Bun.build</code>函数返回一个<code>Promise&lt;BuildOutput&gt;</code>，定义如下：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BuildOutput</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">outputs</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BuildArtifact</span><span style="color:#E1E4E8;">[];</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">success</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">logs</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Array</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">object</span><span style="color:#E1E4E8;">&gt;; </span><span style="color:#6A737D;">// 详细信息请参阅文档</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BuildArtifact</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Blob</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">kind</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;entry-point&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;chunk&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;asset&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;sourcemap&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">path</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">loader</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Loader</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">hash</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">sourcemap</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BuildArtifact</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BuildOutput</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">outputs</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BuildArtifact</span><span style="color:#24292E;">[];</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">success</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">logs</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Array</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">object</span><span style="color:#24292E;">&gt;; </span><span style="color:#6A737D;">// 详细信息请参阅文档</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BuildArtifact</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Blob</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">kind</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;entry-point&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;chunk&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;asset&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;sourcemap&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">path</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">loader</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Loader</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">hash</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">sourcemap</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BuildArtifact</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><code>outputs</code>数组包含构建生成的所有文件。每个构件都实现了<code>Blob</code>接口。</p><p>这些构件还包含以下属性：</p><ul><li><code>kind</code>: 文件的构建输出类型，包括入口点、代码拆分的“块”、sourcemap 和复制的资源（如图像）。</li><li><code>path</code>: 文件在磁盘上的绝对路径。</li><li><code>loader</code>: 用于解释文件的加载器。</li><li><code>hash</code>: 文件内容的哈希值，对于资源始终定义。</li><li><code>sourcemap</code>: 与此文件对应的 sourcemap 文件，如果生成的话。仅对入口点和代码拆分块定义。</li></ul><p>与<code>BunFile</code>类似，<code>BuildArtifact</code>对象可以直接传递给<code>new Response()</code>。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/* */</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">artifact</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> build.outputs[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Content-Type 标头会自动设置</span></span>
<span class="line"><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Response</span><span style="color:#E1E4E8;">(artifact);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">build</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/* */</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">artifact</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> build.outputs[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Content-Type 标头会自动设置</span></span>
<span class="line"><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Response</span><span style="color:#24292E;">(artifact);</span></span></code></pre></div><p>Bun 运行时实现了<code>BuildArtifact</code>对象的特殊漂亮打印，以便更轻松地进行调试。</p><h3 id="可执行文件" tabindex="-1">可执行文件 <a class="header-anchor" href="#可执行文件" aria-label="Permalink to &quot;可执行文件&quot;">​</a></h3><p>Bun 支持将 JavaScript/TypeScript 入口点“编译”为独立的可执行文件。这个可执行文件包含 Bun 二进制文件的副本。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./cli.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outfile</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">mycli</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--compile</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./mycli</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./cli.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outfile</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mycli</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--compile</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./mycli</span></span></code></pre></div><p>有关完整文档，请参阅<a href="/bundler/executables.html">Bundler &gt; Executables</a>。</p><h2 id="日志和错误" tabindex="-1">日志和错误 <a class="header-anchor" href="#日志和错误" aria-label="Permalink to &quot;日志和错误&quot;">​</a></h2><p><code>Bun.build</code>仅在提供了无效选项时抛出错误。使用<code>success</code>属性来确定构建是否成功；<code>logs</code>属性将包含其他详细信息。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  entrypoints: [</span><span style="color:#9ECBFF;">&quot;./index.tsx&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">  outdir: </span><span style="color:#9ECBFF;">&quot;./out&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">result.success) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;构建失败&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">message</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> result.logs) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Bun将漂亮地打印消息对象</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(message);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">result</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  entrypoints: [</span><span style="color:#032F62;">&quot;./index.tsx&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">  outdir: </span><span style="color:#032F62;">&quot;./out&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">result.success) {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">error</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;构建失败&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">message</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">of</span><span style="color:#24292E;"> result.logs) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Bun将漂亮地打印消息对象</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">error</span><span style="color:#24292E;">(message);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>每个消息都是<code>BuildMessage</code>或<code>ResolveMessage</code>对象，可用于跟踪构建中发生的问题。</p><p>如果要从失败的构建中抛出错误，请考虑将日志传递给<code>AggregateError</code>。如果未捕获，Bun 将漂亮地打印包含的消息。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">result.success) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AggregateError</span><span style="color:#E1E4E8;">(result.logs, </span><span style="color:#9ECBFF;">&quot;构建失败&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">result.success) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AggregateError</span><span style="color:#24292E;">(result.logs, </span><span style="color:#032F62;">&quot;构建失败&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><p>以下是 Bun 的主要参考接口：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Bun</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">options</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BuildOptions</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Promise</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">BuildOutput</span><span style="color:#E1E4E8;">&gt;;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BuildOptions</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">entrypoints</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">[]; </span><span style="color:#6A737D;">// 必需</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">outdir</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 默认: 无写入（仅内存中）</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">format</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;esm&quot;</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 以后: &quot;cjs&quot; | &quot;iife&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">target</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;browser&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;bun&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;node&quot;</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// &quot;browser&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">splitting</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">plugins</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BunPlugin</span><span style="color:#E1E4E8;">[]; </span><span style="color:#6A737D;">// [] // 请参阅https://bun.sh/docs/bundler/plugins</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">loader</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> { [</span><span style="color:#B392F0;">k</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Loader</span><span style="color:#E1E4E8;"> }; </span><span style="color:#6A737D;">// 请参阅https://bun.sh/docs/bundler/loaders</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">manifest</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">external</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">[]; </span><span style="color:#6A737D;">// []</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">sourcemap</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;none&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;inline&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;external&quot;</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// &quot;none&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">root</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 从入口点计算</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">naming</span><span style="color:#F97583;">?:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FFAB70;">entry</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// &#39;[dir]/[name].[ext]&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FFAB70;">chunk</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// &#39;[name]-[hash].[ext]&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FFAB70;">asset</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// &#39;[name]-[hash].[ext]&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">      };</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">publicPath</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 例如http://mydomain.com/</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">minify</span><span style="color:#F97583;">?:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        identifiers</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> boolean;</span></span>
<span class="line"><span style="color:#E1E4E8;">        whitespace</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> boolean;</span></span>
<span class="line"><span style="color:#E1E4E8;">        syntax</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> boolean;</span></span>
<span class="line"><span style="color:#E1E4E8;">      };</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BuildOutput</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">outputs</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BuildArtifact</span><span style="color:#E1E4E8;">[];</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">success</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">logs</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Array</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">BuildMessage</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ResolveMessage</span><span style="color:#E1E4E8;">&gt;;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BuildArtifact</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Blob</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">path</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">loader</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Loader</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">hash</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">kind</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;entry-point&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;chunk&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;asset&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;sourcemap&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">sourcemap</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BuildArtifact</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Loader</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;js&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;jsx&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;ts&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;tsx&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;json&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;toml&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;file&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;napi&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;was</span><span style="color:#FDAEB7;font-style:italic;">m</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">  | &quot;</span><span style="color:#B392F0;">text</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#FDAEB7;font-style:italic;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BuildOutput</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">outputs</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BuildArtifact</span><span style="color:#E1E4E8;">[];</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">success</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">logs</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Array</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">BuildMessage</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ResolveMessage</span><span style="color:#E1E4E8;">&gt;;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">declare</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ResolveMessage</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">readonly</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;ResolveMessage&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">readonly</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">position</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Position</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">readonly</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">code</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">readonly</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">message</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">readonly</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">referrer</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">readonly</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">specifier</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">readonly</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">importKind</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;entry_point&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;stmt&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;require&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;import&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;dynamic&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;require_resolve&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;at&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;at_conditional&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;url&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;internal&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">readonly</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">level</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;error&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;warning&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;info&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;debug&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;verbose&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Bun</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">(</span><span style="color:#E36209;">options</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BuildOptions</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Promise</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">BuildOutput</span><span style="color:#24292E;">&gt;;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BuildOptions</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">entrypoints</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">[]; </span><span style="color:#6A737D;">// 必需</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">outdir</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 默认: 无写入（仅内存中）</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">format</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;esm&quot;</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 以后: &quot;cjs&quot; | &quot;iife&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">target</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;browser&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;bun&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;node&quot;</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// &quot;browser&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">splitting</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">plugins</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BunPlugin</span><span style="color:#24292E;">[]; </span><span style="color:#6A737D;">// [] // 请参阅https://bun.sh/docs/bundler/plugins</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">loader</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> { [</span><span style="color:#6F42C1;">k</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Loader</span><span style="color:#24292E;"> }; </span><span style="color:#6A737D;">// 请参阅https://bun.sh/docs/bundler/loaders</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">manifest</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">external</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">[]; </span><span style="color:#6A737D;">// []</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">sourcemap</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;none&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;inline&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;external&quot;</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// &quot;none&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">root</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 从入口点计算</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">naming</span><span style="color:#D73A49;">?:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#E36209;">entry</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// &#39;[dir]/[name].[ext]&#39;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#E36209;">chunk</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// &#39;[name]-[hash].[ext]&#39;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#E36209;">asset</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// &#39;[name]-[hash].[ext]&#39;</span></span>
<span class="line"><span style="color:#24292E;">      };</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">publicPath</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 例如http://mydomain.com/</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">minify</span><span style="color:#D73A49;">?:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        identifiers</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> boolean;</span></span>
<span class="line"><span style="color:#24292E;">        whitespace</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> boolean;</span></span>
<span class="line"><span style="color:#24292E;">        syntax</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> boolean;</span></span>
<span class="line"><span style="color:#24292E;">      };</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BuildOutput</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">outputs</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BuildArtifact</span><span style="color:#24292E;">[];</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">success</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">logs</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Array</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">BuildMessage</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ResolveMessage</span><span style="color:#24292E;">&gt;;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BuildArtifact</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Blob</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">path</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">loader</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Loader</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">hash</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">kind</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;entry-point&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;chunk&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;asset&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;sourcemap&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">sourcemap</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BuildArtifact</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">type</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Loader</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;js&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;jsx&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;ts&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;tsx&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;json&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;toml&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;file&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;napi&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;was</span><span style="color:#B31D28;font-style:italic;">m</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#032F62;">  | &quot;</span><span style="color:#6F42C1;">text</span><span style="color:#032F62;">&quot;</span><span style="color:#B31D28;font-style:italic;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BuildOutput</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">outputs</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BuildArtifact</span><span style="color:#24292E;">[];</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">success</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">logs</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Array</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">BuildMessage</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ResolveMessage</span><span style="color:#24292E;">&gt;;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">declare</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ResolveMessage</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">readonly</span><span style="color:#24292E;"> </span><span style="color:#E36209;">name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;ResolveMessage&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">readonly</span><span style="color:#24292E;"> </span><span style="color:#E36209;">position</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Position</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">readonly</span><span style="color:#24292E;"> </span><span style="color:#E36209;">code</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">readonly</span><span style="color:#24292E;"> </span><span style="color:#E36209;">message</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">readonly</span><span style="color:#24292E;"> </span><span style="color:#E36209;">referrer</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">readonly</span><span style="color:#24292E;"> </span><span style="color:#E36209;">specifier</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">readonly</span><span style="color:#24292E;"> </span><span style="color:#E36209;">importKind</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;entry_point&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;stmt&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;require&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;import&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;dynamic&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;require_resolve&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;at&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;at_conditional&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;url&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;internal&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">readonly</span><span style="color:#24292E;"> </span><span style="color:#E36209;">level</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;error&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;warning&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;info&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;debug&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;verbose&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,182),t=[e];function c(r,y,E,i,d,u){return a(),l("div",null,t)}const C=n(o,[["render",c]]);export{g as __pageData,C as default};
