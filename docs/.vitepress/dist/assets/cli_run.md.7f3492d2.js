import{_ as s,o as a,c as n,Q as p}from"./chunks/framework.33544f09.js";const o="/bun-run-speed.jpeg",h=JSON.parse('{"title":"bun run","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"cli/run.md","filePath":"cli/run.md"}'),l={name:"cli/run.md"},e=p(`<h1 id="bun-run" tabindex="-1"><code>bun run</code> <a class="header-anchor" href="#bun-run" aria-label="Permalink to &quot;\`bun run\`&quot;">​</a></h1><p><code>bun</code> CLI 可用于执行 JavaScript/TypeScript 文件、<code>package.json</code>脚本和<a href="https://docs.npmjs.com/cli/v9/configuring-npm/package-json#bin" target="_blank" rel="noreferrer">可执行包</a>。</p><h2 id="运行文件" tabindex="-1">运行文件 <a class="header-anchor" href="#运行文件" aria-label="Permalink to &quot;运行文件&quot;">​</a></h2><p>与 <code>node &lt;file&gt;</code> 进行比较</p><p>使用 <code>bun run</code> 来执行一个源文件。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">index.js</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">index.js</span></span></code></pre></div><p>Bun 支持 TypeScript 和 JSX，所有文件都会在执行之前由 Bun 的快速本地转译器即时转译。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">index.js</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">index.jsx</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">index.ts</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">index.tsx</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">index.js</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">index.jsx</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">index.ts</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">index.tsx</span></span></code></pre></div><p>裸的 <code>bun</code> 命令等同于 <code>bun run</code>。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">index.tsx</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">index.tsx</span></span></code></pre></div><h3 id="watch" tabindex="-1"><code>--watch</code> <a class="header-anchor" href="#watch" aria-label="Permalink to &quot;\`--watch\`&quot;">​</a></h3><p>要在监视模式下运行文件，使用 <code>--watch</code> 标志。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--watch</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">index.tsx</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">bun</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--watch</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">index.tsx</span></span></code></pre></div><h3 id="smol" tabindex="-1"><code>--smol</code> <a class="header-anchor" href="#smol" aria-label="Permalink to &quot;\`--smol\`&quot;">​</a></h3><p>在内存受限的环境中，使用 <code>--smol</code> 标志以降低内存使用，但会降低性能。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--smol</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">index.tsx</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--smol</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">index.tsx</span></span></code></pre></div><h2 id="运行-package-json-脚本" tabindex="-1">运行 <code>package.json</code> 脚本 <a class="header-anchor" href="#运行-package-json-脚本" aria-label="Permalink to &quot;运行 \`package.json\` 脚本&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">INFO</p><p>与 <code>npm run &lt;script&gt;</code> 或 <code>yarn &lt;script&gt;</code> 进行比较</p></div><p>您的 <code>package.json</code> 可以定义一些命名的 <code>&quot;scripts&quot;</code>，对应于 shell 命令。</p><div class="language-jsonc vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsonc</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// ... 其他字段</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;scripts&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;clean&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;rm -rf dist &amp;&amp; echo &#39;Done.&#39;&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;dev&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;bun server.ts&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// ... 其他字段</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;scripts&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;clean&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;rm -rf dist &amp;&amp; echo &#39;Done.&#39;&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;dev&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;bun server.ts&quot;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>使用 <code>bun &lt;script&gt;</code> 来执行这些脚本。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">clean</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">rm</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-rf</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">dist</span><span style="color:#E1E4E8;"> &amp;&amp; </span><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;Done.&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">Cleaning...</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">Done.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clean</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">rm</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-rf</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dist</span><span style="color:#24292E;"> &amp;&amp; </span><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;Done.&#39;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">Cleaning...</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">Done.</span></span></code></pre></div><p>Bun 在子 shell 中执行脚本命令。它按以下顺序检查以下 shell，使用找到的第一个 shell：<code>bash</code>、<code>sh</code>、<code>zsh</code>。</p><p>⚡️ Linux 上的 <code>npm run</code> 的启动时间约为 170ms；而使用 Bun 则只需 <code>6ms</code>。</p><p>如果 <code>package.json</code> 脚本与内置的 <code>bun</code> 命令（<code>install</code>、<code>dev</code>、<code>upgrade</code>等）之间存在名称冲突，Bun 的内置命令将优先。在这种情况下，使用更明确的 <code>bun run</code> 命令来执行您的包脚本。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">dev</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dev</span></span></code></pre></div><p>要查看可用脚本的列表，运行不带任何参数的 <code>bun run</code>。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span></span>
<span class="line"><span style="color:#B392F0;">quickstart</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">scripts:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">clean</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">rm</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-rf</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">dist</span><span style="color:#E1E4E8;"> &amp;&amp; </span><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;Done.&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">dev</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">server.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">scripts</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span></span>
<span class="line"><span style="color:#6F42C1;">quickstart</span><span style="color:#24292E;"> </span><span style="color:#032F62;">scripts:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clean</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">rm</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-rf</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dist</span><span style="color:#24292E;"> &amp;&amp; </span><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;Done.&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dev</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">server.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">2</span><span style="color:#24292E;"> </span><span style="color:#032F62;">scripts</span></span></code></pre></div><p>Bun 遵守生命周期挂钩。例如，如果定义了 <code>pre&lt;script&gt;</code>，则 <code>bun run clean</code> 将执行 <code>preclean</code> 和 <code>postclean</code>。如果 <code>pre&lt;script&gt;</code> 失败，Bun 将不执行脚本本身。</p><h2 id="环境变量" tabindex="-1">环境变量 <a class="header-anchor" href="#环境变量" aria-label="Permalink to &quot;环境变量&quot;">​</a></h2><p>在运行文件、脚本或可执行文件之前，Bun 会自动从 <code>.env</code> 文件加载环境变量。按照以下顺序检查以下文件：</p><ol><li><code>.env.local</code>（第一个）</li><li><code>NODE_ENV</code> === <code>&quot;production&quot;</code> ？ <code>.env.production</code> ： <code>.env.development</code></li><li><code>.env</code></li></ol><p>要调试环境变量，运行 <code>bun run env</code> 以查看已解析环境变量的列表。</p><h2 id="性能" tabindex="-1">性能 <a class="header-anchor" href="#性能" aria-label="Permalink to &quot;性能&quot;">​</a></h2><p>Bun 的设计目标是快速启动和高性能运行。</p><p>在 Bun 的内部，使用的是<a href="https://developer.apple.com/documentation/javascriptcore" target="_blank" rel="noreferrer">JavaScriptCore 引擎</a>，它是由 Apple 为 Safari 开发的。在大多数情况下，启动和运行性能比 Node.js 和基于 Chromium 的浏览器使用的 V8 引擎更快。它的转译器和运行时是用 Zig 编写的，这是一种现代</p><p>的、高性能的语言。在 Linux 上，这意味着启动时间比 Node.js 快<a href="https://twitter.com/jarredsumner/status/1499225725492076544" target="_blank" rel="noreferrer">4 倍</a>。</p><p><img src="`+o+'" alt="Bun vs Node.js vs Deno运行Hello World"></p>',38),c=[e];function t(r,E,i,y,d,u){return a(),n("div",null,c)}const b=s(l,[["render",t]]);export{h as __pageData,b as default};
